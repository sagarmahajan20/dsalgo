/*
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Output: Because nums[0] + nums[1] == 9, we return [0, 1].


*/

class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        int[] result  = new int[2];
        
        Map<Integer,Integer> map = new Hashmap<Integer,Integer>();
        
        for(int i=0; i<nums.length; i++)
        {
        
            if(map.containsKey(target - numbers[i]))
            {
                result[1] = i;
                result[0] = map.get(target-number[i]);
                return result;
            }
            map.put(numbers[i],i)
        }
        return result;
    }
}
